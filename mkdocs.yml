site_name: cpp_robotics
site_url: https://kotakku.github.io/cpp_robotics/
site_author: Takumi Odashima
site_description: "cpp_robotics: A C++ library for robotics"

copyright: Copyright &copy; 2022 - Takumi Odashima

repo_name: Kotakku/cpp_robotics
repo_url: https://github.com/Kotakku/cpp_robotics
edit_uri: ''

theme:
  name: material
  language: ja
  features:
    - navigation.tabs
    - navigation.tabs.sticky
    - toc.integrate
    - navigation.instant
  plugins:
  - search:
      lang: 
        - ja
  - exclude:
      glob:
        - '**/.github/*'
        - '**/build/*'
        - '**/example/*'
        - '**/include/*'
        - '**/test/*'
  palette:
    scheme: default
  font:
    text: Roboto
    code: Roboto Mono
  # favicon: image/logo.svg
  icon:
    logo: fontawesome/solid/robot
    repo: fontawesome/brands/github
  custom_dir: docs/overrides

markdown_extensions:
    - admonition
    - attr_list
    - def_list
    - footnotes
    - meta
    - pymdownx.superfences:
    - pymdownx.arithmatex:
        generic: true

extra_javascript: 
  - javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

nav:
  - 概要: index.md
  - API: /cpp_robotics/doxybook/Namespaces/namespacecpp__robotics/
  - プログラム例:
    - HelloWorld: example/hello_world.md
  #   - アルゴリズム:
  #     - ICP: example/algorithm/icp_sample.md
  #     - KDtree: example/algorithm/kdtree_sample.md
    - 制御:
      # - PID vs NCTF: example/control/pid_vs_nctf.md
      - LQR: example/control/lqr.md
      - 正準形: example/control/canonicalize.md
      - 極配置: example/control/place.md
      # - Pure pursuit: example/control/pure_pursuit.md
      - VRFTによるPIDゲインの自動チューニング: example/control/vrft_pid.md
    - 最適化:
      - スカラー関数の最適化: example/optimize/optimize_scalar.md
      - 無制約最適化: example/optimize/optimize_without_constraint.md
      - Rosenbrock関数の最適化: example/optimize/optimize_rosenbrock.md
      # - 制約付き最適化: example/optimize/optimize_with_constraint.md
      # - 有効制約法: example/optimize/active_set_method_example.md
      # - SQP(逐次二次計画法): example/optimize/sqp_example.md
    - システム:
      - 伝達関数のステップ応答: example/system/step_responce.md
      - ボード線図・ナイキスト線図: example/system/bode_nyquist.md
      - 状態空間表現: example/system/state_space_system.md
    - パスプランニング:
      - Dubins曲線: example/path_planning/dubins_path.md
  #   - 単位系:
  #     - constexpr単位系: example/units/units.md

  - 技術資料:
    - システムモデル:
      - 伝達関数: tech_note/system/transfer_function.md
      - 状態空間表現: tech_note/system/state_space_system.md
      - 離散化: tech_note/system/discrete.md
    - 制御:
      # - システムの極・零点: tech_note/control/pole_and_zero.md
      # - 非最小位相系: tech_note/control/minphase.md
      # - システムの安定性: tech_note/control/stability.md
      - PID: tech_note/control/pid.md
      - 2自由度PID: tech_note/control/pid2.md
      - LQR: tech_note/control/lqr.md
      # - NCTF: tech_note/control/nctf.md
      - 極配置による状態フィードバック: tech_note/control/place.md
      # - Pure pursuit: tech_note/control/pure_pursuit.md
      # - PFC: tech_note/control/pfc.md
      - FRIT,VRFTによるゲインチューニング: tech_note/control/frit_vrft_turning.md
    - 最適制御:
      - 最適制御: tech_note/optimal_control/optimal_control.md
      - モデル予測制御(MPC): tech_note/optimal_control/mpc.md
    - 運動学:
      - 差動二輪機構: tech_note/kinematics/diff_robot.md
      - メカナム移動機構: tech_note/kinematics/mecanum.md
      - オムニ移動機構: tech_note/kinematics/omni.md
      - 独立4輪ステア移動機構: tech_note/kinematics/swerve.md
      # - デルタロボット: tech_note/kinematics/delta_robot.md
    - フィルタ:
      - 伝達関数で表現されるフィルタ: tech_note/filter/tf_filter.md
      # - 速度制限フィルタ・加速度制限フィルタ: tech_note/filter/limitted_filter.md
      - カルマンフィルタ: tech_note/filter/kalman_filter.md
      # - 拡張カルマンフィルタ: tech_note/filter/extend_kalman_filter.md
    - パスプランニング・パストラッキング:
      # - A*: tech_note/path_planning/a_star.md
      # - wave propagation: tech_note/path_planning/wave_propagation.md
      - Dubins曲線: tech_note/path_planning/dubins_path.md
      # - DWA: tech_note/path_planning/dwa.md
      # - フレネ座標系: tech_note/path_planning/frenet_path.md
      - スプライン曲線: tech_note/path_planning/spline.md
      # - RVO: tech_note/path_planning/rvo.md
    - アルゴリズム:
      # - KDTree: tech_note/algorithm/kdtree.md
      # - 多項式: tech_note/algorithm/poly.md
      # - 回帰曲線: tech_note/algorithm/poly_regression.md
      # - 躍度最小化モデル: tech_note/algorithm/jerk_minimum_model.md
      # - K-means法: tech_note/algorithm/k_means_method.md
      - 多項式補間: tech_note/algorithm/poly_lerp.md
      - マハラノビス距離: tech_note/algorithm/mahalanobis.md
      # - 自動微分: tech_note/algorithm/auto_diff.md
    # - 点群マッチング:
    #   - ICP: tech_note/algorithm/icp.md
    #   - NDT: tech_note/algorithm/ndt.md
    - 最適化: 
      - アルゴリズムの概要: tech_note/optimize/algo_abst.md
      - 数理計画問題とアルゴリズム一覧: tech_note/optimize/prob_and_algo.md
      - 数値微分: tech_note/optimize/derivative.md
      - 直線探索: tech_note/optimize/line_search.md
      - 無制約最適化:
        - 最急降下法: tech_note/optimize/conj_grad.md
        - ニュートン法: tech_note/optimize/newton.md
        - 準ニュートン法: tech_note/optimize/quasi_newton.md
        - ベンチマーク: tech_note/optimize/benchmark_cont.md
      - 制約付き最適化:
        - KKT条件: tech_note/optimize/kkt_condition.md
        - 二次計画法: tech_note/optimize/quadprog.md
        # - 有効制約法: tech_note/optimize/active_set_method.md
        # - バリア法: tech_note/optimize/barrier_method.md
        # - ペナルティ法: tech_note/optimize/penalty_methond.md
        - 内点法: tech_note/optimize/interior_method.md
        - SQP(逐次二次計画法): tech_note/optimize/sqp.md
        - 最小二乗法: tech_note/optimize/least_squares_method.md
      - 最適化の収束判定: tech_note/optimize/tolerances_and_stopping.md
    # - 図形:
    #   - 図形の衝突判定: tech_note/geometry/geometry.md
    - モーター:
      - モーターの状態空間表現: tech_note/motor/motor_model.md
      - マブチモータのスペック読み取り: tech_note/motor/mabuchi.md
    - ソフトウェア設計:
      # - デザインパターン: tech_note/software_design/design_pattern.md
      - SOLID原則: tech_note/software_design/solid.md